CREATE TABLE IF NOT EXISTS network (
    uuid uuid,
    variantNum int,
    id VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    idByAlias text,
    caseDate timestamp,
    forecastDistance int,
    sourceFormat VARCHAR(50),
    connectedComponentsValid boolean,
    synchronousComponentsValid boolean,
    cgmesSvMetadata text,
    cgmesSshMetadata text,
    cimCharacteristics text,
    cgmesControlAreas text,
    baseVoltageMapping text,
    variantId VARCHAR(255),
    PRIMARY KEY (uuid, variantNum)
);

CREATE TABLE IF NOT EXISTS substation (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    country text,
    tso VARCHAR(50),
    entsoeArea text,
    geographicalTags text,
    PRIMARY KEY (networkUuid, variantNum, id)
);

CREATE TABLE IF NOT EXISTS voltageLevel (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    substationId VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    nominalV double precision,
    lowVoltageLimit double precision,
    highVoltageLimit double precision,
    topologyKind text,
    internalConnections text,
    calculatedBusesForBusView text,
    nodeToCalculatedBusForBusView text,
    busToCalculatedBusForBusView text,
    calculatedBusesForBusBreakerView text,
    nodeToCalculatedBusForBusBreakerView text,
    busToCalculatedBusForBusBreakerView text,
    calculatedBusesValid boolean,
    slackTerminal text,
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on voltageLevel (networkUuid, variantNum, substationId);

CREATE TABLE IF NOT EXISTS generator (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    node int,
    energySource text,
    minP double precision,
    maxP double precision,
    voltageRegulatorOn boolean,
    targetP double precision,
    targetQ double precision,
    targetV double precision,
    ratedS double precision,
    p double precision,
    q double precision,
    position text,
    minMaxReactiveLimits text,
    reactiveCapabilityCurve text,
    bus VARCHAR(255),
    connectableBus VARCHAR(255),
    activePowerControl text,
    regulatingTerminal text,
    coordinatedReactiveControl text,
    remoteReactivePowerControl text,
    entsoeCategory text,
    generatorStartup text,
    generatorShortCircuit text,
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on generator (networkUuid, variantNum, voltageLevelId);

CREATE TABLE IF NOT EXISTS battery (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    node int,
    minP double precision,
    maxP double precision,
    targetP double precision,
    targetQ double precision,
    p double precision,
    q double precision,
    position text,
    minMaxReactiveLimits text,
    reactiveCapabilityCurve text,
    bus VARCHAR(255),
    connectableBus VARCHAR(255),
    activePowerControl text,
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on battery (networkUuid, variantNum, voltageLevelId);

CREATE TABLE IF NOT EXISTS load (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    node int,
    loadType text,
    p0 double precision,
    q0 double precision,
    p double precision,
    q double precision,
    position text,
    bus VARCHAR(255),
    connectableBus VARCHAR(255),
    loadDetail text,
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on load (networkUuid, variantNum, voltageLevelId);

CREATE TABLE IF NOT EXISTS shuntCompensator (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    node int,
    linearModel text,
    nonLinearModel text,
    sectionCount int,
    p double precision,
    q double precision,
    position text,
    bus VARCHAR(255),
    connectableBus VARCHAR(255),
    regulatingTerminal text,
    voltageRegulatorOn boolean,
    targetV double precision,
    targetDeadband double precision,
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on shuntCompensator (networkUuid, variantNum, voltageLevelId);

CREATE TABLE IF NOT EXISTS vscConverterStation (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    node int,
    lossFactor real,
    voltageRegulatorOn boolean,
    reactivePowerSetPoint double precision,
    voltageSetPoint double precision,
    minMaxReactiveLimits text,
    reactiveCapabilityCurve text,
    p double precision,
    q double precision,
    position text,
    bus VARCHAR(255),
    connectableBus VARCHAR(255),
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on vscConverterStation (networkUuid, variantNum, voltageLevelId);

CREATE TABLE IF NOT EXISTS lccConverterStation (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    node int,
    powerFactor real,
    lossFactor real,
    p double precision,
    q double precision,
    position text,
    bus VARCHAR(255),
    connectableBus VARCHAR(255),
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on lccConverterStation (networkUuid, variantNum, voltageLevelId);

CREATE TABLE IF NOT EXISTS staticVarCompensator (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    node int,
    bMin double precision,
    bMax double precision,
    voltageSetPoint double precision,
    reactivePowerSetPoint double precision,
    regulationMode text,
    p double precision,
    q double precision,
    position text,
    bus VARCHAR(255),
    connectableBus VARCHAR(255),
    regulatingTerminal text,
    voltagePerReactivePowerControl text,
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on staticVarCompensator (networkUuid, variantNum, voltageLevelId);

CREATE TABLE IF NOT EXISTS busbarSection (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    node int,
    position text,
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on busbarSection (networkUuid, variantNum, voltageLevelId);

CREATE TABLE IF NOT EXISTS switch (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId VARCHAR(255),
    name VARCHAR(255),
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    kind text,
    node1 int,
    node2 int,
    open boolean,
    retained boolean,
    fictitious boolean,
    bus1 VARCHAR(255),
    bus2 VARCHAR(255),
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on switch (networkUuid, variantNum, voltageLevelId);

CREATE TABLE IF NOT EXISTS twoWindingsTransformer (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId1 VARCHAR(255),
    voltageLevelId2 VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    node1 int,
    node2 int,
    r double precision,
    x double precision,
    g double precision,
    b double precision,
    ratedU1 double precision,
    ratedU2 double precision,
    ratedS double precision,
    p1 double precision,
    q1 double precision,
    p2 double precision,
    q2 double precision,
    position1 text,
    position2 text,
    phaseTapChangerLowTapPosition int,
    phaseTapChangerTapPosition int,
    phaseTapChangerRegulating boolean,
    phaseTapChangerTargetDeadband double precision,
    phaseTapChangerTerminalRefConnectableId VARCHAR(255),
    phaseTapChangerTerminalRefSide text,
    phaseTapChangerRegulationMode text,
    phaseTapChangerRegulationValue double precision,
    ratioTapChangerLowTapPosition int,
    ratioTapChangerTapPosition int,
    ratioTapChangerRegulating boolean,
    ratioTapChangerTargetDeadband double precision,
    ratioTapChangerTerminalRefConnectableId VARCHAR(255),
    ratioTapChangerTerminalRefSide text,
    ratioTapChangerLoadTapChangingCapabilities boolean,
    ratioTapChangerTargetV double precision,
    bus1 VARCHAR(255),
    bus2 VARCHAR(255),
    connectableBus1 VARCHAR(255),
    connectableBus2 VARCHAR(255),
    permanentCurrentLimit1 double precision,
    permanentCurrentLimit2 double precision,
    permanentActivePowerLimit1 double precision,
    permanentActivePowerLimit2 double precision,
    permanentApparentPowerLimit1 double precision,
    permanentApparentPowerLimit2 double precision,
    phaseAngleClock text,
    branchStatus VARCHAR(50),
    cgmesTapChangers text,
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on twoWindingsTransformer (networkUuid, variantNum, voltageLevelId1);
create index on twoWindingsTransformer (networkUuid, variantNum, voltageLevelId2);


CREATE TABLE IF NOT EXISTS threeWindingsTransformer (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId1 VARCHAR(255),
    voltageLevelId2 VARCHAR(255),
    voltageLevelId3 VARCHAR(255),
    node1 int,
    node2 int,
    node3 int,
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    ratedU0 double precision,
    p1 double precision,
    q1 double precision,
    r1 double precision,
    x1 double precision,
    g1 double precision,
    b1 double precision,
    ratedU1 double precision,
    ratedS1 double precision,
    phaseTapChangerLowTapPosition1 int,
    phaseTapChangerTapPosition1 int,
    phaseTapChangerRegulating1 boolean,
    phaseTapChangerTargetDeadband1 double precision,
    phaseTapChangerTerminalRefConnectableId1 VARCHAR(255),
    phaseTapChangerTerminalRefSide1 text,
    phaseTapChangerRegulationMode1 text,
    phaseTapChangerRegulationValue1 double precision,
    ratioTapChangerLowTapPosition1 int,
    ratioTapChangerTapPosition1 int,
    ratioTapChangerRegulating1 boolean,
    ratioTapChangerTargetDeadband1 double precision,
    ratioTapChangerTerminalRefConnectableId1 VARCHAR(255),
    ratioTapChangerTerminalRefSide1 text,
    ratioTapChangerLoadTapChangingCapabilities1 boolean,
    ratioTapChangerTargetV1 double precision,
    p2 double precision,
    q2 double precision,
    r2 double precision,
    x2 double precision,
    g2 double precision,
    b2 double precision,
    ratedU2 double precision,
    ratedS2 double precision,
    phaseTapChangerLowTapPosition2 int,
    phaseTapChangerTapPosition2 int,
    phaseTapChangerRegulating2 boolean,
    phaseTapChangerTargetDeadband2 double precision,
    phaseTapChangerTerminalRefConnectableId2 VARCHAR(255),
    phaseTapChangerTerminalRefSide2 text,
    phaseTapChangerRegulationMode2 text,
    phaseTapChangerRegulationValue2 double precision,
    ratioTapChanger2 text,
    ratioTapChangerLowTapPosition2 int,
    ratioTapChangerTapPosition2 int,
    ratioTapChangerRegulating2 boolean,
    ratioTapChangerTargetDeadband2 double precision,
    ratioTapChangerTerminalRefConnectableId2 VARCHAR(255),
    ratioTapChangerTerminalRefSide2 text,
    ratioTapChangerLoadTapChangingCapabilities2 boolean,
    ratioTapChangerTargetV2 double precision,
    p3 double precision,
    q3 double precision,
    r3 double precision,
    x3 double precision,
    g3 double precision,
    b3 double precision,
    ratedU3 double precision,
    ratedS3 double precision,
    phaseTapChangerLowTapPosition3 int,
    phaseTapChangerTapPosition3 int,
    phaseTapChangerRegulating3 boolean,
    phaseTapChangerTargetDeadband3 double precision,
    phaseTapChangerTerminalRefConnectableId3 VARCHAR(255),
    phaseTapChangerTerminalRefSide3 text,
    phaseTapChangerRegulationMode3 text,
    phaseTapChangerRegulationValue3 double precision,
    ratioTapChangerLowTapPosition3 int,
    ratioTapChangerTapPosition3 int,
    ratioTapChangerRegulating3 boolean,
    ratioTapChangerTargetDeadband3 double precision,
    ratioTapChangerTerminalRefConnectableId3 VARCHAR(255),
    ratioTapChangerTerminalRefSide3 text,
    ratioTapChangerLoadTapChangingCapabilities3 boolean,
    ratioTapChangerTargetV3 double precision,
    position1 text,
    position2 text,
    position3 text,
    permanentCurrentLimit1 double precision,
    permanentCurrentLimit2 double precision,
    permanentCurrentLimit3 double precision,
    permanentActivePowerLimit1 double precision,
    permanentActivePowerLimit2 double precision,
    permanentActivePowerLimit3 double precision,
    permanentApparentPowerLimit1 double precision,
    permanentApparentPowerLimit2 double precision,
    permanentApparentPowerLimit3 double precision,
    bus1 VARCHAR(255),
    connectableBus1 VARCHAR(255),
    bus2 VARCHAR(255),
    connectableBus2 VARCHAR(255),
    bus3 VARCHAR(255),
    connectableBus3 VARCHAR(255),
    phaseAngleClock text,
    branchStatus VARCHAR(50),
    cgmesTapChangers text,
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on threeWindingsTransformer (networkUuid, variantNum, voltageLevelId1);
create index on threeWindingsTransformer (networkUuid, variantNum, voltageLevelId2);
create index on threeWindingsTransformer (networkUuid, variantNum, voltageLevelId3);


CREATE TABLE IF NOT EXISTS temporaryLimit (
    equipmentId VARCHAR(255) NOT NULL,
    equipmentType VARCHAR(255),
    networkUuid VARCHAR(255) NOT NULL,
    variantNum int NOT NULL,
    side int NOT NULL,
    limitType VARCHAR(50) NOT NULL,
    name VARCHAR(255),
    value double precision,
    acceptableDuration int NOT NULL,
    fictitious boolean,
    PRIMARY KEY (networkUuid, variantNum, equipmentId, side, acceptableDuration, limitType)
);

create index on temporaryLimit (networkUuid, variantNum, equipmentId);


CREATE TABLE IF NOT EXISTS line (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId1 VARCHAR(255),
    voltageLevelId2 VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    node1 int,
    node2 int,
    r double precision,
    x double precision,
    g1 double precision,
    b1 double precision,
    g2 double precision,
    b2 double precision,
    p1 double precision,
    q1 double precision,
    p2 double precision,
    q2 double precision,
    position1 text,
    position2 text,
    bus1 VARCHAR(255),
    bus2 VARCHAR(255),
    connectableBus1 VARCHAR(255),
    connectableBus2 VARCHAR(255),
    mergedXnode text,
    permanentCurrentLimit1 double precision,
    permanentCurrentLimit2 double precision,
    permanentActivePowerLimit1 double precision,
    permanentActivePowerLimit2 double precision,
    permanentApparentPowerLimit1 double precision,
    permanentApparentPowerLimit2 double precision,
    branchStatus VARCHAR(50),
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on line (networkUuid, variantNum, voltageLevelId1);
create index on line (networkUuid, variantNum, voltageLevelId2);

CREATE TABLE IF NOT EXISTS hvdcLine (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    r double precision,
    convertersMode text,
    nominalV double precision,
    activePowerSetpoint double precision,
    maxP double precision,
    converterStationId1 VARCHAR(255),
    converterStationId2 VARCHAR(255),
    hvdcAngleDroopActivePowerControl text,
    hvdcOperatorActivePowerRange text,
    PRIMARY KEY (networkUuid, variantNum, id)
);

CREATE TABLE IF NOT EXISTS danglingLine (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    node int,
    p0 double precision,
    q0 double precision,
    r double precision,
    x double precision,
    g double precision,
    b double precision,
    generation text,
    ucteXNodeCode VARCHAR(255),
    permanentCurrentLimit double precision,
    permanentActivePowerLimit double precision,
    permanentApparentPowerLimit double precision,
    p double precision,
    q double precision,
    position text,
    bus VARCHAR(255),
    connectableBus VARCHAR(255),
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on danglingLine (networkUuid, variantNum, voltageLevelId);

CREATE TABLE IF NOT EXISTS configuredBus (
    networkUuid uuid,
    variantNum int,
    id VARCHAR(255),
    voltageLevelId VARCHAR(255),
    name VARCHAR(255),
    fictitious boolean,
    properties text,
    aliasesWithoutType text,
    aliasByType text,
    v double precision,
    angle double precision,
    PRIMARY KEY (networkUuid, variantNum, id)
);
create index on configuredBus (networkUuid, variantNum, voltageLevelId);

CREATE TABLE IF NOT EXISTS tapChangerStep (
    equipmentId VARCHAR(255),
    equipmentType VARCHAR(255),
    networkUuid uuid,
    variantNum int,
    index int,
    side int,
    tapChangerType VARCHAR(50),
    rho double precision,
    r double precision,
    x double precision,
    g double precision,
    b double precision,
    alpha double precision,
    PRIMARY KEY (equipmentId, networkUuid, variantNum, index, side, tapChangerType)
);
